@startuml
package application{
    package core{
class ApplicationData
{
value
+getValue()
+setValue(boolean value)
}
    }
    package initializer{
class ApplicationInitializer
{
ApplicationInitializer(ViewFactory, InputFactory)
}
class InputFactory
{
+{abstract} getInput(): ApplicationInput
}
    }
    package mvc{
interface ApplicationControllerAccess
{
+ execute()
}
class ApplicationModel
{
ApplicationData data
ApplicationService service
+ApplicationModel(ApplicationInput)
+ getValue()
+ execute()
}
interface ApplicationViewAccess {
+ getValue()
}
    }
    package service{
class ApplicationService
{
+ApplicationService(ApplicationInput)
+ execute(ApplicationData)
}
class ApplicationInput
{
{abstract}+readValue()
}
    }
  }
  package ui{
    package template{
class Model {
View[] views
+ registerView(View)
+ notifyViews()
}
interface View
{
+ update()
}
class ViewFactory
{
+{abstract} makeViews(Model)
}

    }
    package console{
class ConsoleController
{
ApplicationControllerAccess model
+ ConsoleController(ApplicationControllerAccess)
+ execute()
}
class ConsoleView
{
ConsoleController controller
ApplicationViewAccess model
ConsoleView(Model)
+ update()
}
class ConsoleViewFactory
{
+ makeViews(Model)
}
    }
  }

  package infrastructure{
    package input{
class InfrastructureInput {
+readValue()
}
class InfrastructureFactory{
+ getInput(): ApplicationInput
}
    }
  }


class Starter {
+ void main(String[] args)
}

ApplicationInitializer ..> ViewFactory
ApplicationInitializer ..> ApplicationModel
ApplicationInitializer ..> InputFactory
ViewFactory ..> Model

ApplicationModel --|> Model
ApplicationModel ..|> ApplicationControllerAccess
ApplicationModel ..|> ApplicationViewAccess
ApplicationModel o--> ApplicationData
ApplicationModel o--> ApplicationService

ApplicationService ..> ApplicationData

ConsoleController o--> ApplicationControllerAccess

ConsoleView ..> Model
ConsoleView o-->ApplicationViewAccess

ConsoleView ..|> View
ConsoleView ..> ConsoleController

ConsoleViewFactory --|> ViewFactory
ConsoleViewFactory ..> ConsoleView
ConsoleViewFactory ..> Model
Model o-up-> View

Starter ..> ApplicationInitializer
Starter ..>  ConsoleViewFactory
Starter ..> InfrastructureFactory
InfrastructureInput --|> ApplicationInput
InfrastructureFactory --|> InputFactory
InfrastructureFactory ..> InfrastructureInput
InputFactory ..> ApplicationInput
ApplicationService o--> ApplicationInput
ApplicationModel ..> ApplicationInput
@enduml
